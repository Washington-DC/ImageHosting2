<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:Converters="clr-namespace:ImageHosting.Controls.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Themes/Theme.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <PathGeometry x:Key="MetroTreeArrow" Figures="M0,0 L5,5 L0,10 " />
    <PathGeometry x:Key="MetroTreeArrowCollapse" Figures="M1.25,0 L4.75,3.5 L1.25,7 " />
    <PathGeometry x:Key="MetroTreeArrowExpland" Figures="M0,1.75 L3.5,5.25 L7,2 " />
    <PathGeometry x:Key="MetroTreeArrowCollapseLarge" Figures="M2.5,0 L7.5,5 L2.5,10 " />
    <PathGeometry x:Key="MetroTreeArrowExplandLarge" Figures="M0,2.5 L5,7.5 L10,2.5 " />

    <PathGeometry x:Key="SelectedItemTag" Figures="M0,5 L5,10 L5,0 z" />

    <Style x:Key="MetroExplandCollapseToogleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Width="10" Height="16" Padding="0,4,0,0" VerticalAlignment="Center">
                        <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#989898" VerticalAlignment="Center"
                            Data="{StaticResource MetroTreeArrowCollapseLarge}">
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#1BBBFA" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Data" Value="{StaticResource MetroTreeArrowExplandLarge}"/>
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#262626" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="Transparent" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#1BBBFA" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- TreeViewItem 样式 -->
    <Style x:Key="MetroTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrushKey}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <!-- 计算节点缩进的转换器 -->
                        <Converters:IndentConverter Indent="27" MarginLeft="5" x:Key="IndentConverter" />
                    </ControlTemplate.Resources>
                    <StackPanel >
                        <Border x:Name="Border"
                                Height="40"
                            BorderBrush="{StaticResource NormalBorderBrushKey}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{StaticResource NormalBackgroundBrushKey}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                            <Grid Margin="{Binding Converter={StaticResource IndentConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="12" Width="Auto" />
                                    <ColumnDefinition MinWidth="25" Width="Auto" />
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander"
                                    Style="{DynamicResource MetroExplandCollapseToogleStyle}"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press" Width="Auto" HorizontalAlignment="Left" 
                                    Height="Auto" Margin="1,0,0,0" />
                                <Label x:Name="FontIcon" Grid.Column="1" Content="{Binding Path=Tag,RelativeSource={RelativeSource TemplatedParent}}" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource NormalForegroundBrushKey}"/>
                                <ContentPresenter x:Name="PART_Header"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"        
                                    ContentSource="Header"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource SelectedActiveBorderBrushKey}" />
                            <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource SelectedActiveBackgroundBrushKey}" />
                            <Setter Property="Foreground"
                                Value="{StaticResource SelectedActiveForegroundBrushKey}" />
                            <Setter TargetName="FontIcon" Property="Foreground"
                                Value="{StaticResource SelectedActiveForegroundBrushKey}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource SelectedInactiveBorderBrushKey}" />
                            <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource SelectedInactiveBackgroundBrushKey}" />
                            <Setter Property="Foreground"
                                Value="{StaticResource SelectedInactiveForegroundBrushKey}" />
                            <Setter TargetName="FontIcon" Property="Foreground"
                                Value="{StaticResource SelectedInactiveForegroundBrushKey}" />
                        </MultiTrigger>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource HoverBorderBrushKey}" />
                            <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource HoverBackgroundBrushKey}" />
                            <Setter Property="Foreground"
                                Value="{StaticResource HoverForegroundBrushKey}" />
                            <Setter TargetName="FontIcon" Property="Foreground"
                                Value="{StaticResource HoverForegroundBrushKey}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource SelectedHoverBorderBrushKey}" />
                            <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource SelectedHoverBackgroundBrushKey}" />
                            <Setter Property="Foreground"
                                Value="{StaticResource SelectedHoverForegroundBrushKey}" />
                            <Setter TargetName="FontIcon" Property="Foreground"
                                Value="{StaticResource SelectedHoverForegroundBrushKey}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" 
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter TargetName="FontIcon" Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>